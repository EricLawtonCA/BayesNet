#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage{unicode-math}
\setmathfont{Asana-Math.otf}
\end_preamble
\use_default_options true
\begin_modules
knitr
\end_modules
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding default
\fontencoding global
\font_roman palatino
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc true
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Network graphs for human-machine communications"
\pdf_author "Eric Lawton"
\pdf_subject "Bayesian networks for complex reasoning"
\pdf_keywords "Bayesian networks, machine learning"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 2
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "pdfstartview={XYZ null null 1}"
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type numerical
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 3
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<setup, include=FALSE, cache=FALSE>>=
\end_layout

\begin_layout Plain Layout

library(knitr)
\end_layout

\begin_layout Plain Layout

library(bnlearn)
\end_layout

\begin_layout Plain Layout

library(visNetwork)
\end_layout

\begin_layout Plain Layout

library(magrittr)
\end_layout

\begin_layout Plain Layout

# set global chunk options
\end_layout

\begin_layout Plain Layout

opts_chunk$set(fig.path='figure/minimal-', fig.align='center', fig.show='hold')
\end_layout

\begin_layout Plain Layout

options(formatR.arrow=TRUE,width=90)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Title
Bayesian Network Visualization for Human-Machine Collaboration
\end_layout

\begin_layout Author
Eric Lawton
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
Why this may be useful to you
\end_layout

\begin_layout Standard
I am learning how to apply machine learning to complex problems while making
 it easy for humans to follow the reasoning.
 I find network diagrams of all kinds a useful tool, so I'm exploring a
 particular kind, Bayesian Networks (BNs), for this purpose.
\end_layout

\begin_layout Standard
I'm currently interested in how we can use evidence to inform public policy-maki
ng, by governments and NGOs.
 However, so far it applies to any sets of related concepts (variables)
 where you may be interested in exploring correlations and causal relations,
 with questions such as:
\end_layout

\begin_layout Itemize
What is the structure of the relationships between these variables?
\end_layout

\begin_layout Itemize
Given a relationship, how strong an influence does one variable have on
 another?
\end_layout

\begin_layout Itemize
Given a variable with multiple causes, how do changes in the causes affect
 that variable?
\end_layout

\begin_layout Itemize
Where would more data help most with answering key questions?
\end_layout

\begin_layout Standard
I am documenting the resources I found most useful and also some blind alleys
 that I think I spent too much time on, so even though I'm still learning,
 this may save you some time if you are just starting.
\end_layout

\begin_layout Standard
Since the source learning material I am using has examples in the R programming
 environment, I'm using that for now.
 I also wanted to be able to publish working examples on the Web as I explore
 public data and it turns out that R offers Shiny to do just that.
 So far, it has worked flawlessly for me.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Example network
\begin_inset CommandInset label
LatexCommand label
name "fig:Example-network"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename PlantsGrow.png
	scale 60

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Since most interesting things that we want to understand, or to change,
 depend on many other things, it is often useful to draw diagrams to help
 with that understanding.
 Network diagrams are a helpful tool.
\end_layout

\begin_layout Standard
In the example above, there are four variables.
 Two of them are independent, for the purposes of this example; the rain
 and the fertilizer.
 How much my plants grow depend on these.
 
\begin_inset Foot
status open

\begin_layout Plain Layout
So does the population of rails: a tip-of-the-hat to 
\begin_inset CommandInset href
LatexCommand href
name "@RallidaeRule"
target "https://twitter.com/rallidaerule"

\end_inset

 on Twitter™ as her feed introduced me to R.
 However, I have no data for them because they are elusive marsh birds.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The diagram shows these dependencies, with the arrows showing the direction
 of the dependencies.
 However, it soon gets more complex as more variables are introduced and
 we want to introduce statistical reasoning based on the evidence that supports
 these connections.
 The point of my investigation is how to use these relatively simple diagrams
 together with some machine learning algorithms, so that both humans and
 computers can collaborate in understanding such complex networks of causal
 connections.
\end_layout

\begin_layout Section
Context and status
\end_layout

\begin_layout Standard
This is an early start on a work-in-progress.
 So far I have more questions than answers but I'll update it as I learn
 more.
 I just got to the point where the pages of obscure algebra are beginning
 to make sense, so I thought I'd get it captured at that stage before going
 further.
\end_layout

\begin_layout Standard
At the moment, I am doing all my exploring in the R programming environment.
 I tried Python but gave up for now as I need to focus a bit more.
 I will return later.
 See 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Why-R?"

\end_inset

 for more details.
\end_layout

\begin_layout Standard
To follow this, you will need
\end_layout

\begin_layout Itemize
Some knowledge of programming in R, so you can play with the code.
 However I learned enough R to do this much in a few days (based on decades
 with other languages) so you may be able to at least read this with just
 general programming knowledge.
 Caution: R is somewhat quirky.
 All the code and this document is available on GitHub at 
\begin_inset CommandInset href
LatexCommand href
target "https://github.com/EricLawtonCA/BayesNet"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
For BN functionality, I am starting with is an R package called 
\family typewriter
bnlearn
\family default

\begin_inset CommandInset citation
LatexCommand citep
key "scutari_bnlearn:_2015"

\end_inset

 both because it has a good set of functionality and because there is a
 fairly good book to learn Bayesian Networks from, co-written by the author
 of the package.
 
\end_layout

\begin_layout Itemize
For visualization, there is a choice.
 The main package I am using is 
\family typewriter
visNetworks
\family default

\begin_inset CommandInset citation
LatexCommand citep
key "htmlwidgets/lib_visnetwork:_2016"

\end_inset

, as it is interactive, which I need in order to have the machine/human
 partnership.
 But so far I have not got it to display a static version in this document
 so you will see only screen shots of it here.
 
\end_layout

\begin_layout Itemize
A demonstration application is on Shiny.io at 
\begin_inset CommandInset href
LatexCommand href
target "https://ericlawton.shinyapps.io/playShiny/"

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize

\strikeout on
Some
\strikeout default
 No mathematics (yet).
 I took out the few equations I had, because it would take me too long to
 explain from scratch and they didn't add much.
 For next version, they'll come back in, so you'll need introductory undergradua
te-level probability and statistics.
 I'd forgotten most of mine except for the bits I've used in practice, so
 I had to do a refresher.
 That was originally the main reason I learned all this R, so I could visualize
 the maths more easily.
 It worked, but now I need to think how to write it down in a simpler fashion
 than just replicating the text books.
 See 
\begin_inset CommandInset ref
LatexCommand vref
reference "chap:Primary-sources"

\end_inset

 for the principal sources I used.
\end_layout

\begin_layout Standard
If you have any feedback for me on this, please use Twitter.
 
\begin_inset CommandInset href
LatexCommand href
name "@Eric0Lawton"
target "https://twitter.com/Eric0Lawton"

\end_inset

 (The zero is because I don't have a middle name and plain EricLawton was
 taken).
\end_layout

\begin_layout Section
Vocabulary
\end_layout

\begin_layout Description
Graph.
 Mathematicians reserve 
\begin_inset Quotes eld
\end_inset

graph
\begin_inset Quotes erd
\end_inset

 to mean objects that put nodes and edges together, as in the diagrams in
 this document.
 However, the term is used much more generally among non-mathematicians,
 to include many other kinds of plots, so I will use the work 
\begin_inset Quotes eld
\end_inset

network
\begin_inset Quotes erd
\end_inset

 instead, for clarity.
\end_layout

\begin_layout Description
Node.
 I will stick to this instead of 
\begin_inset Quotes eld
\end_inset

vertex
\begin_inset Quotes erd
\end_inset

 because I don't know enough Greek to remember the plural 
\begin_inset Quotes eld
\end_inset

vertices
\begin_inset Quotes erd
\end_inset

.
 The same term is used by both 
\family typewriter
bnlearn
\family default
 and 
\family typewriter
visNetwork
\family default
.
\end_layout

\begin_layout Description
Edge.
 There is a slight problem here because 
\family typewriter
bnlearn
\family default
 uses the graphical term 
\begin_inset Quotes eld
\end_inset

Arc
\begin_inset Quotes erd
\end_inset

, while 
\family typewriter
visNetwork
\family default
 uses 
\begin_inset Quotes eld
\end_inset

Edge
\begin_inset Quotes erd
\end_inset

.
 This is one place where R is less helpful.
 When mapping data frames from one package to the other, you have to rename
 elements of the data structures.
 This feature is particularly bad for people who don't speak English.
 The names are hard-wired into the packages.
 
\end_layout

\begin_layout Description
Parent.
 The node at the tail of an arrow is called a parent of the node at the
 pointy-end.
\end_layout

\begin_layout Description
Child.
 The node at the head is called a child of its parent.
\end_layout

\begin_layout Chapter
Bayesian Networks
\end_layout

\begin_layout Section
Summary
\end_layout

\begin_layout Standard
So far, I have learned the basics of BNs with discrete variables, and have
 assembled some machinery to make it all work in Shiny with 
\family typewriter
visNetwork
\family default
.
 The machinery has some basic selection and arrangement interaction but
 not yet an ability to restructure the graph or change the probability values.
 However, it does do the mapping from 
\family typewriter
bnlearn
\family default
 to 
\family typewriter
visNetwork
\family default
 and displays the associated CPTs when a node is selected.
\end_layout

\begin_layout Standard
The 
\family typewriter
bnlearn
\family default
 classes do not keep track of visual elements and 
\family typewriter
visNetwork
\family default
 doesn't keep track of probability tables, and they structure the data different
ly.
 So my first step was to find a way to transform the structures.
 They are relatively simple in that both use lists of nodes and of arcs
 that define which node they are 
\begin_inset Quotes eld
\end_inset

from
\begin_inset Quotes erd
\end_inset

 and which they are 
\begin_inset Quotes eld
\end_inset

to
\begin_inset Quotes erd
\end_inset

.
 The main difference is that 
\family typewriter
bnlearn
\family default
 uses strings to identify nodes and 
\family typewriter
visNetwork
\family default
 uses numeric IDs.
 So these need mapping back and forth.
 This is easy in R because both use named columns so it's just a question
 of adding a column and doing a lookup to map names to ids and back.
 The only other mapping I have implemented yet is from the strength of a
 connection to the width of an arc.
 So, for example, if rain has a bigger influence on plant growth than fertilizer
, the arc from rain will be thicker than that from fertilizer.
 It doesn't make sense to map that back again as it is a calculated value
 that would not be set directly through the user interface.
\end_layout

\begin_layout Section
Discrete Case: Multinomial Bayesian Networks
\end_layout

\begin_layout Subsection
Summary of the theory
\end_layout

\begin_layout Standard
A BN is a Directed Acyclic Graph (DAG) where each node has a Conditional
 Probability Table (CPT) associated with it, also called a Node Probability
 Table.
 
\end_layout

\begin_layout Description
\begin_inset Quotes eld
\end_inset

Directed
\begin_inset Quotes erd
\end_inset

 means there are arrows.
 Arcs have a direction from a variable to one that depends on it.
\end_layout

\begin_layout Description
\begin_inset Quotes eld
\end_inset

Acyclic
\begin_inset Quotes erd
\end_inset

 means there are no closed loops.
 You can't follow a set of arrows from a node to another and finish up back
 where you started.
\end_layout

\begin_layout Standard
The nodes of the network represents the objects of interest (variables)
\end_layout

\begin_layout Description
CPT is where Bayes comes in.
 Bayes Theorem is the mathematics of conditional probability.
 
\end_layout

\begin_layout Standard
For example, we may know from experience that the overall probability that
 plants grow a lot is 30%.
 However, if we know already that it rained but and they were fertilized,
 the probability will be even higher.
 For each combination of rain/not rain, fertilise/not fertilise, there is
 a different probability of the growth.
 This is called probability of growth, conditional on rain and fertilizer,
 written 
\begin_inset Formula $P(Growth\mid Rain,Fertilize)$
\end_inset

 and given in terms of a table, as in the examples below.
 A BN associates one of these tables with each node in the graph, conditional
 on the parents (the nodes 
\begin_inset Quotes eld
\end_inset

up arrow
\begin_inset Quotes erd
\end_inset

 from the node in question).
 If there are no parents, the CPT is just the probability distribution of
 the node.
 For example, we can get 
\begin_inset Quotes eld
\end_inset

Probability of precipitation
\begin_inset Quotes erd
\end_inset

 from the weather forecast.
\end_layout

\begin_layout Standard
So for the example above, if we assume the discrete values of 
\begin_inset Quotes eld
\end_inset

rained yesterday
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

didn't rain yesterday
\begin_inset Quotes erd
\end_inset

 for 
\begin_inset Quotes eld
\end_inset

Rain
\begin_inset Quotes erd
\end_inset

 (as opposed to continuous value such as millimetres of rain), and other
 discrete values as shown in the following tables, the nodes would have
 the CPTs like those below, probabilities in percentages.
 (Omitting the rails because they are so elusive, I don't have any data).
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Rain CPT
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rained
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Didn't rain
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
70
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Fertilizer CPT
\end_layout

\end_inset

 
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fertilized
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not fertilized
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
90
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Plants grow CPT
\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="5">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Grew a lot
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
a bit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Didn't grow
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fertilized
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rained
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
70
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not fertilized
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rained
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
50
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fertilized 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Didn't rain
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
40
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not fertilized
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Didn't rain
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
70
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
There are various algorithms provided with BN software which allow the structure
 of the network and the CPTs to be provided by a human expert, or some or
 all of the structures and NPTs to be derived by algorithms from data sets.
 Sometimes only a partially complete structure or CPT set can be derived,
 where not enough data is provided, but it can also be seen where more data
 is needed either to estimate these or where the strength of the given estimates
 is weak.
 My next job is to learn more about these.
 
\end_layout

\begin_layout Subsection
More Complex Example, with code
\end_layout

\begin_layout Standard
The book I am using (
\begin_inset CommandInset citation
LatexCommand cite
key "denis_reseaux_2014"

\end_inset

) introduces an example concerning the use of different forms of transport
 by persons belonging to various sociological groups and provides a sample
 dataset containing the following variables, each of which has a very small
 set of discrete values.
\end_layout

\begin_layout Description
Age: Age of person, divided into three classes; Young (< 30 years), Adult
 (30 to 60) and Old ( > 60 )
\end_layout

\begin_layout Description
Sex: M or F (I know, a rather limited subset of possible values).
\end_layout

\begin_layout Description
Education: high(-school), uni(versity)
\end_layout

\begin_layout Description
Occupation: 
\begin_inset Quotes eld
\end_inset

Emp
\begin_inset Quotes erd
\end_inset

(loyee) and 
\begin_inset Quotes eld
\end_inset

self
\begin_inset Quotes erd
\end_inset

(-employed)
\end_layout

\begin_layout Description
Residence: Size of the community in which the person lives, Small or Large
\end_layout

\begin_layout Description
Transport: Most frequently used form, Auto, Train or Other
\end_layout

\begin_layout Standard
For our purposes, we can group these into three categories
\end_layout

\begin_layout Description
Demographic: Age and Sex.
 Attributes of the person that cannot be modified
\end_layout

\begin_layout Description
Socio-economic: Education, Profession and Residence, positions taken by
 people within society
\end_layout

\begin_layout Description
Target-Variables: Transport.
 The variable which is the target of the study, of which this example has
 only one.
\end_layout

\begin_layout Standard
The following code fragments will read a dataset and automatically learn
 the structure that best fits the data.
 The network is then transformed into 
\family typewriter
visNetwork
\family default
 format for display.
 For now, the dataset is an example I took from the 
\begin_inset CommandInset href
LatexCommand href
name "bnlearn web site"
target "http://www.bnlearn.com/"

\end_inset

, so that I can work through the exercises to learn the network theory and
 also build the interactive machinery.
\end_layout

\begin_layout Standard
The code below will set things up by
\end_layout

\begin_layout Enumerate
Reading the data
\end_layout

\begin_layout Enumerate
Getting the network structure, i.e.
 figuring out which arcs are needed to show the dependencies between the
 variables, and which variables should NOT be connected by arcs.
 This could be done by a human expert, but in this case I use a hill-climbing
 algorithm provided by 
\family typewriter
bnlearn
\family default
's 
\family typewriter
hc
\family default
 function.
 to analyze the data and return the basic DAG.
\end_layout

\begin_layout Enumerate
Calculating the strengths of those dependencies.
 In this case I use a 
\begin_inset Formula $\chi^{2}$
\end_inset

conditional dependence test supplied with 
\family typewriter
bnlearn
\family default
.
 This function returns a p-value, the lower the number, the stronger the
 connection, so I invert that using a normalised reciprocal to make the
 arc thicker, the lower the number.
 It's just a rough approximation that I may need to refine later.
\end_layout

\begin_layout Enumerate
Calculating the CPTs for all the nodes, using 
\family typewriter
bn.fit
\family default
.
\end_layout

\begin_layout Standard
In one way, it would be convenient to do this all in one function call,
 but the advantage of doing it piecemeal is that you can inject human expertise
 instead, at each step, by specifying the data instead of calculating it.
 (Of course, the expert would probably calculate herself, but using different
 tools).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<learn-bn>>=
\end_layout

\begin_layout Plain Layout

survey <- read.table("../data/survey.txt", header = TRUE)
\end_layout

\begin_layout Plain Layout

dag <- hc(survey)
\end_layout

\begin_layout Plain Layout

dag
\end_layout

\begin_layout Plain Layout

arc.strengths <- arc.strength(dag, data = survey, criterion = "x2")
\end_layout

\begin_layout Plain Layout

arc.strengths
\end_layout

\begin_layout Plain Layout

bn.graph.cpt  <- bn.fit(dag,survey,method="bayes")
\end_layout

\begin_layout Plain Layout

bn.graph.cpt
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Next we get things all ready for display via visNetwork and Shiny, but I
 can't evaluate the code here as it needs the Shiny machinery on a web server
 so I can't print to a page.
 However, the resulting network is shown in a screen print below.
 This code does work as-is within RStudio as it provides a viewer that shows
 the resulting graph.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<display-bn, eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

edge.widths  <- max(arc.strengths$strength)/arc.strengths$strength 
\end_layout

\begin_layout Plain Layout

# Turn bnlearn "arcs" into visNetwork "nodes" by doing a lookup from names
 to IDs 
\end_layout

\begin_layout Plain Layout

visNetwork.edges <- data.frame(
\end_layout

\begin_layout Plain Layout

        from=visNetwork.nodes$id[match(arcs(bn.graph)[,'from'],visNetwork.nodes$lab
el)],
\end_layout

\begin_layout Plain Layout

        to=visNetwork.nodes$id[match(arcs(bn.graph)[,'to'],visNetwork.nodes$label)]
 ,
\end_layout

\begin_layout Plain Layout

        arrows="to",  # define the arrow style   
\end_layout

\begin_layout Plain Layout

        width=edge.widths)
\end_layout

\begin_layout Plain Layout

visNetwork(visNetwork.nodes, visNetwork.edges) %>%         
\end_layout

\begin_layout Plain Layout

  visOptions(nodesIdSelection = list(enabled=TRUE,selected=1), highlightNearest
 = TRUE) %>%
\end_layout

\begin_layout Plain Layout

  visHierarchicalLayout(sortMethod = "directed")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Here is the resulting graph, with arc thickness indicating the strength
 of the contributions of the arc to the NPT for the target node.
 If you look at the interactive version on Shiny, you can click on the nodes
 to display the CPTs and highlight the parents and children.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Example visGraph display
\end_layout

\end_inset


\begin_inset Graphics
	filename visNetwork ex 1.PNG

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
For the Shiny code, see GitHub.
\end_layout

\begin_layout Subsection
The point of Bayesian Networks
\end_layout

\begin_layout Standard
When looking at just six variables, as in the example, if they are all independe
nt then a table representing the probability of all possible states has
 a lot of entries, even when each can only take a small number of values.
 In this case it would be 143= (product of number of values for the 6 variables)
-1).
 It would take a 6-dimensional table, which is beyond my powers of visualization.
 However, by first finding the dependencies, and representing it as a graph
 with lower-dimensional CPTs for each node, you cut things down significantly.
 In this case, from 143 free parameters to only 21.
\end_layout

\begin_layout Standard
This ability to factorise from a large multi-dimensional table to a collection
 of small ones is associated with the 
\emph on
Markovian property
\emph default
 of a Bayesian Network: given its parent variables, each variable is conditional
ly independent of other variables other than its descendants.
 I'll get more into the math in the next version of this.
 It took a while for all the symbols to suddenly gel in my little brain
 to make sense.
 I think I can write it down now in my own terms with a few pictures.
\end_layout

\begin_layout Chapter
Shiny
\end_layout

\begin_layout Standard
Shiny is an R package that lets you create a web application very quickly.
 RStudio lets you run this on the desktop with the click of a button and
 also provides a site where you can register and run a public application.
 There is a free version for low volume and a sliding scale of paid options
 for more 
\begin_inset Quotes eld
\end_inset

air time
\begin_inset Quotes erd
\end_inset

 and more space.
 And you just have to click a button in RStudio to deploy.
 I've never seen it so simple.
 The only thing that's missing is a layout tool; you need to code that by
 hand, but it's not very complex.
 However, you do have to remember to structure your application a little
 differently and debugging is a little harder because there is more hidden
 machinery between the parts of your application so you can't always see
 exactly what is going on.
 The tuturial at 
\begin_inset CommandInset href
LatexCommand href
target "http://shiny.rstudio.com/tutorial/"

\end_inset

 is excellent, but I haven't yet done the more advanced stuff with reactive
 expressions and observers.
\end_layout

\begin_layout Standard
Conceptually, there are three parts to a web application, using the classic
 design pattern 
\begin_inset Quotes eld
\end_inset

Model, View, Controller
\begin_inset Quotes erd
\end_inset

.
 The pattern says 
\begin_inset Quotes eld
\end_inset

keep these three things separate, in your code and your brain
\begin_inset Quotes erd
\end_inset

.
 See, for example, this Wikipedia article.
 
\begin_inset CommandInset href
LatexCommand href
target "https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller"

\end_inset


\end_layout

\begin_layout Description
Model is the code and data that represents the real-world things that you
 are representing.
 In this case, the bnlearn graph with its nodes, arcs and CPTs
\end_layout

\begin_layout Description
View is the user interface with its panels, buttons and other widgets that
 the user sees and interacts with.
 Also includes PDFs, plots and other representations.
\end_layout

\begin_layout Description
Controller is the code that mediates the interactions between the two, turning
 a click or some data entry into the right function call to update the model.
\end_layout

\begin_layout Standard
Generally, I add another piece
\end_layout

\begin_layout Description
Data, which is the persistant data behind the model.
 For example, the raw data file 
\begin_inset Quotes eld
\end_inset

survey.txt
\begin_inset Quotes erd
\end_inset

 that I read in above, or a SQL database.
\end_layout

\begin_layout Standard
For single-use R scripts that you will not use after your data analysis,
 this may be overkill, but if you intend to maintain it over time, the initial
 investment in separating the concerns will probably pay off.
\end_layout

\begin_layout Part*
Appendices
\end_layout

\begin_layout Chapter
Tools
\end_layout

\begin_layout Section
Why R?
\begin_inset CommandInset label
LatexCommand label
name "chap:Why-R?"

\end_inset


\end_layout

\begin_layout Standard
I originally planned to use Python, rather than R, because I thought it
 a more general-purpose language and more suited to interactive programs
\end_layout

\begin_layout Standard
However:
\end_layout

\begin_layout Itemize
Some Python packages work only with 2.x, others with 3.x and I couldn't get
 the ones I wanted to work together
\end_layout

\begin_layout Itemize
I didn't know R did interactive.
 It does, very well, with Shiny and RStudio gives free/cheap hosting
\end_layout

\begin_layout Itemize
There are lots of books and web sites that use R for their examples and
 exercises.
 Many are cited here.
\end_layout

\begin_layout Itemize
R has three (slightly weird) object-systems and good support for functional
 programming.
 Looks pretty general purpose to me.
\end_layout

\begin_layout Standard
I'll look at Python again, later, in the hopes that some more packages have
 been updated, or I have time to find a better set, or I have time to do
 as they suggest: 
\begin_inset Quotes eld
\end_inset

port them yourself
\begin_inset Quotes erd
\end_inset

.
 In any case, there are many other tools in Python that I would like to
 try, but I need to do at most 42 things at once..
\end_layout

\begin_layout Section
Graphics editor
\end_layout

\begin_layout Standard
The first diagram (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Example-network"

\end_inset

) was drawn using yEd.
 This exports in GraphML a standard that several graphics packages can read,
 including igraph (R and Python).
 This lets you do several formal diagram types for Information Technology,
 including Unified Modeling Language.
 Recommended.
 Free, from 
\begin_inset CommandInset href
LatexCommand href
target "http://www.yworks.com/products/yed"

\end_inset

.
 I found it easy to import GraphML from yEd into R by using 
\family typewriter
igraph
\family default
 functions, and then use that as the foundation for 
\family typewriter
bnlearn
\family default
 analysis.
\end_layout

\begin_layout Standard
Until I found 
\family typewriter
visNetwork
\family default
, 
\family typewriter
igraph
\family default
 was my favourite package.
 Lots of good graphic options, plus functions to transform from other representa
tions, such as GraphML.
 From CRAN, or other sources for Python, C++.
\end_layout

\begin_layout Section
Documentation
\end_layout

\begin_layout Standard
This document was written using LyX, an Open Source 
\begin_inset Quotes eld
\end_inset

What you see is what you mean
\begin_inset Quotes erd
\end_inset

 editor for LaTeX.
 Although originally designed (by Donald Knuth) for mathematical typesetting,
 I've pretty much managed to replace Word with LyX for my own writing of
 any kind.
 
\begin_inset CommandInset href
LatexCommand href
target "https://www.lyx.org/"

\end_inset


\end_layout

\begin_layout Chapter*
Principal sources
\begin_inset CommandInset label
LatexCommand label
name "chap:Primary-sources"

\end_inset


\end_layout

\begin_layout Standard
I'm using these books as my main sources, supplemented by many places on
 the Internet that I will cite individually in the relevant places.
\end_layout

\begin_layout Itemize
“Réseaux bayésiens avec R”
\begin_inset CommandInset citation
LatexCommand cite
key "denis_reseaux_2014"

\end_inset

 A text on Bayesian Networks with R.
 I am finding this very useful as it has worked examples and exercises.
 There is an English version, but that was a lot more expensive.
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Causality: Models, Reasoning and Inference
\begin_inset Quotes erd
\end_inset

 
\begin_inset CommandInset citation
LatexCommand citep
key "pearl_causality:_2009"

\end_inset

 THE book on this topic.
 Strongly recommended, though the math may be heavy going if you're not
 used to mathematical notation.
 However, I found that where I did get stuck, the next book got me out of
 trouble, together with working the R examples in the previous.
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Risk Assessment and Decision Analysis with Bayesian Networks
\begin_inset Quotes erd
\end_inset

 
\begin_inset CommandInset citation
LatexCommand citep
key "fenton_risk_2012"

\end_inset

.
 Has really good introductions to statistics and probability before it dives
 into Bayesian Networks.
 It explains in great detail so is useful when I don't get something that
 Pearl is saying.
 Also gives a code to get free software which is useful for exploring this
 if you don't want to use a programming language.
 The software does all the work through an easy GUI.
 Recommended both by Judea Pearl (see above) and me.
\end_layout

\begin_layout Standard
For learning R as an n
\begin_inset script superscript

\begin_layout Plain Layout
th
\end_layout

\end_inset

 programming language, I found that the web version of Hadley Wickham's
 
\begin_inset Quotes eld
\end_inset

Advanced R
\begin_inset Quotes erd
\end_inset

 
\begin_inset CommandInset citation
LatexCommand citep
key "wickham_welcome_2014"

\end_inset

 was mostly all I needed, plus of course helpful web sites, especially StackExch
ange.
\end_layout

\begin_layout Standard
Shiny has an excellent tutorial at 
\begin_inset CommandInset href
LatexCommand href
target "http://shiny.rstudio.com/tutorial/"

\end_inset

 and points to a more in-depth one at 
\begin_inset CommandInset href
LatexCommand href
name "zevross.com"
target "http://zevross.com/blog/2016/04/19/r-powered-web-applications-with-shiny-a-tutorial-and-cheat-sheet-with-40-example-apps/"

\end_inset

.
\end_layout

\begin_layout Chapter*
To do list
\end_layout

\begin_layout Enumerate
This document needs more context for other readers, which will include Future
 Eric all too soon.
\end_layout

\begin_layout Enumerate
Start to learn how this works with continuous variables
\end_layout

\begin_layout Enumerate
More advanced Shiny - see if I can produce a model behind all the textual
 descriptions of how the observers etc work.
 Possibly related to the 
\begin_inset Quotes eld
\end_inset

Observer
\begin_inset Quotes erd
\end_inset

 pattern from Gang of Four?
\end_layout

\begin_layout Enumerate
Look into OpenBugs
\end_layout

\begin_layout Enumerate
Biggest puzzle so far: how does this work for feedback loops? All the theory
 is for 
\shape italic
acyclic
\shape default
 graphs, but there is causal feedback in most interesting complex systems.
 I think this comes in when I move past static into temporal networks.
\end_layout

\begin_layout Enumerate
Smaller puzzle, how do we get from mere correlations to causality.
 Since that is the title of the Pearl book, I'm hoping to find the answer
 before my brain gets too full.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "C:/Users/Eric/Documents/Bibliography/MyLibrary"
options "unsrtnat"

\end_inset


\end_layout

\end_body
\end_document
